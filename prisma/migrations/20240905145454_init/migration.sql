CREATE TABLE Admin (
    id VARCHAR(191) NOT NULL,
    username VARCHAR(191) NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE Student (
    id VARCHAR(191) NOT NULL,
    username VARCHAR(191) NOT NULL,
    name VARCHAR(191) NOT NULL,
    surname VARCHAR(191) NOT NULL,
    email VARCHAR(191),
    phone VARCHAR(191),
    address VARCHAR(191) NOT NULL,
    img TEXT,
    bloodType VARCHAR(191) NOT NULL,
    sex ENUM('MALE', 'FEMALE') NOT NULL,
    createdAt DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3),
    parentId VARCHAR(191) NOT NULL,
    classId INT NOT NULL,
    gradeId INT NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE Teacher (
    id VARCHAR(191) NOT NULL,
    username VARCHAR(191) NOT NULL,
    name VARCHAR(191) NOT NULL,
    surname VARCHAR(191) NOT NULL,
    email VARCHAR(191),
    phone VARCHAR(191),
    address VARCHAR(191) NOT NULL,
    img TEXT,
    bloodType VARCHAR(191) NOT NULL,
    sex ENUM('MALE', 'FEMALE') NOT NULL,
    createdAt DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3),
    PRIMARY KEY (id)
);

CREATE TABLE Parent (
    id VARCHAR(191) NOT NULL,
    username VARCHAR(191) NOT NULL,
    name VARCHAR(191) NOT NULL,
    surname VARCHAR(191) NOT NULL,
    email VARCHAR(191),
    phone VARCHAR(191) NOT NULL,
    address VARCHAR(191) NOT NULL,
    createdAt DATETIME(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3),
    PRIMARY KEY (id)
);

CREATE TABLE Grade (
    id INT AUTO_INCREMENT NOT NULL,
    level INT NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE Class (
    id INT AUTO_INCREMENT NOT NULL,
    name VARCHAR(191) NOT NULL,
    capacity INT NOT NULL,
    supervisorId VARCHAR(191) NOT NULL,
    gradeId INT NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE Subject (
    id INT AUTO_INCREMENT NOT NULL,
    name VARCHAR(191) NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE Lesson (
    id INT AUTO_INCREMENT NOT NULL,
    name VARCHAR(191) NOT NULL,
    day ENUM('MONDAY', 'TUESDAY', 'WEDNESDAY', 'THURSDAY', 'FRIDAY') NOT NULL,
    startTime DATETIME(3) NOT NULL,
    endTime DATETIME(3) NOT NULL,
    subjectId INT NOT NULL,
    classId INT NOT NULL,
    teacherId VARCHAR(191) NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE Exam (
    id INT AUTO_INCREMENT NOT NULL,
    title VARCHAR(191) NOT NULL,
    startTime DATETIME(3) NOT NULL,
    endTime DATETIME(3) NOT NULL,
    lessonId INT NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE Assignment (
    id INT AUTO_INCREMENT NOT NULL,
    title VARCHAR(191) NOT NULL,
    startDate DATETIME(3) NOT NULL,
    dueDate DATETIME(3) NOT NULL,
    lessonId INT NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE Result (
    id INT AUTO_INCREMENT NOT NULL,
    score INT NOT NULL,
    examId INT,
    assignmentId INT,
    studentId VARCHAR(191) NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE Attendance (
    id INT AUTO_INCREMENT NOT NULL,
    date DATETIME(3) NOT NULL,
    present BOOLEAN NOT NULL,
    studentId VARCHAR(191) NOT NULL,
    lessonId INT NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE Event (
    id INT AUTO_INCREMENT NOT NULL,
    title VARCHAR(191) NOT NULL,
    description TEXT NOT NULL,
    startTime DATETIME(3) NOT NULL,
    endTime DATETIME(3) NOT NULL,
    classId INT,
    PRIMARY KEY (id)
);

CREATE TABLE Announcement (
    id INT AUTO_INCREMENT NOT NULL,
    title VARCHAR(191) NOT NULL,
    description TEXT NOT NULL,
    date DATETIME(3) NOT NULL,
    classId INT,
    PRIMARY KEY (id)
);

CREATE TABLE _SubjectToTeacher (
    A INT NOT NULL,
    B VARCHAR(191) NOT NULL
);

-- Indexes
CREATE UNIQUE INDEX Admin_username_key ON Admin(username);
CREATE UNIQUE INDEX Student_username_key ON Student(username);
CREATE UNIQUE INDEX Student_email_key ON Student(email);
CREATE UNIQUE INDEX Student_phone_key ON Student(phone);
CREATE UNIQUE INDEX Teacher_username_key ON Teacher(username);
CREATE UNIQUE INDEX Teacher_email_key ON Teacher(email);
CREATE UNIQUE INDEX Teacher_phone_key ON Teacher(phone);
CREATE UNIQUE INDEX Parent_username_key ON Parent(username);
CREATE UNIQUE INDEX Parent_email_key ON Parent(email);
CREATE UNIQUE INDEX Parent_phone_key ON Parent(phone);
CREATE UNIQUE INDEX Grade_level_key ON Grade(level);
CREATE UNIQUE INDEX Class_name_key ON Class(name);
CREATE UNIQUE INDEX Subject_name_key ON Subject(name);
CREATE UNIQUE INDEX _SubjectToTeacher_AB_unique ON _SubjectToTeacher(A, B);
CREATE INDEX _SubjectToTeacher_B_index ON _SubjectToTeacher(B);

-- Foreign Keys
ALTER TABLE Student ADD CONSTRAINT Student_parentId_fkey FOREIGN KEY (parentId) REFERENCES Parent(id) ON DELETE RESTRICT ON UPDATE CASCADE;
ALTER TABLE Student ADD CONSTRAINT Student_classId_fkey FOREIGN KEY (classId) REFERENCES Class(id) ON DELETE RESTRICT ON UPDATE CASCADE;
ALTER TABLE Student ADD CONSTRAINT Student_gradeId_fkey FOREIGN KEY (gradeId) REFERENCES Grade(id) ON DELETE RESTRICT ON UPDATE CASCADE;
ALTER TABLE Class ADD CONSTRAINT Class_supervisorId_fkey FOREIGN KEY (supervisorId) REFERENCES Teacher(id) ON DELETE RESTRICT ON UPDATE CASCADE;
ALTER TABLE Class ADD CONSTRAINT Class_gradeId_fkey FOREIGN KEY (gradeId) REFERENCES Grade(id) ON DELETE RESTRICT ON UPDATE CASCADE;
ALTER TABLE Lesson ADD CONSTRAINT Lesson_subjectId_fkey FOREIGN KEY (subjectId) REFERENCES Subject(id) ON DELETE RESTRICT ON UPDATE CASCADE;
ALTER TABLE Lesson ADD CONSTRAINT Lesson_classId_fkey FOREIGN KEY (classId) REFERENCES Class(id) ON DELETE RESTRICT ON UPDATE CASCADE;
ALTER TABLE Lesson ADD CONSTRAINT Lesson_teacherId_fkey FOREIGN KEY (teacherId) REFERENCES Teacher(id) ON DELETE RESTRICT ON UPDATE CASCADE;
ALTER TABLE Exam ADD CONSTRAINT Exam_lessonId_fkey FOREIGN KEY (lessonId) REFERENCES Lesson(id) ON DELETE RESTRICT ON UPDATE CASCADE;
ALTER TABLE Assignment ADD CONSTRAINT Assignment_lessonId_fkey FOREIGN KEY (lessonId) REFERENCES Lesson(id) ON DELETE RESTRICT ON UPDATE CASCADE;
ALTER TABLE Result ADD CONSTRAINT Result_examId_fkey FOREIGN KEY (examId) REFERENCES Exam(id) ON DELETE SET NULL ON UPDATE CASCADE;
ALTER TABLE Result ADD CONSTRAINT Result_assignmentId_fkey FOREIGN KEY (assignmentId) REFERENCES Assignment(id) ON DELETE SET NULL ON UPDATE CASCADE;
ALTER TABLE Result ADD CONSTRAINT Result_studentId_fkey FOREIGN KEY (studentId) REFERENCES Student(id) ON DELETE RESTRICT ON UPDATE CASCADE;
ALTER TABLE Attendance ADD CONSTRAINT Attendance_studentId_fkey FOREIGN KEY (studentId) REFERENCES Student(id) ON DELETE RESTRICT ON UPDATE CASCADE;
ALTER TABLE Attendance ADD CONSTRAINT Attendance_lessonId_fkey FOREIGN KEY (lessonId) REFERENCES Lesson(id) ON DELETE RESTRICT ON UPDATE CASCADE;
ALTER TABLE Event ADD CONSTRAINT Event_classId_fkey FOREIGN KEY (classId) REFERENCES Class(id) ON DELETE SET NULL ON UPDATE CASCADE;
ALTER TABLE Announcement ADD CONSTRAINT Announcement_classId_fkey FOREIGN KEY (classId) REFERENCES Class(id) ON DELETE SET NULL ON UPDATE CASCADE;
ALTER TABLE _SubjectToTeacher ADD CONSTRAINT _SubjectToTeacher_A_fkey FOREIGN KEY (A) REFERENCES Subject(id) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE _SubjectToTeacher ADD CONSTRAINT _SubjectToTeacher_B_fkey FOREIGN KEY (B) REFERENCES Teacher(id) ON DELETE CASCADE ON UPDATE CASCADE;
